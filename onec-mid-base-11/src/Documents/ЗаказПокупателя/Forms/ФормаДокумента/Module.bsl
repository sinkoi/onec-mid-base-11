
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	// {{Добавление реквизита формы "Соласованная скидка"
	Группа = Элементы.Добавить("ГруппаСкидка", Тип("ГруппаФормы"), ЭтаФорма.Элементы.ГруппаШапкаЛево);
	Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	
	Если ЭтаФорма.Элементы.Найти("СогласованнаяСкидка") = Неопределено Тогда
		 НовыйЭлемент = ЭтаФорма.Элементы.Добавить("СогласованнаяСкидка", Тип("ПолеФормы"), Группа);
         НовыйЭлемент.ПутьКДанным = "Объект.ДЗ11_СогласованнаяСкидка"; 
		 НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
		 НовыйЭлемент.УстановитьДействие("ПриИзменении", "ПриИзмененииСкидки");
	КонецЕсли;	 
	// }}
	
	// {{Добавление Команды формы 
	Команда = Команды.Добавить("ДЗ11Пересчитать");
	Команда.Заголовок = "Пересчитать";
	Команда.Действие = "ДЗ11Пересчитать";
	
	КнопкаФормы = Элементы.Добавить("Пересчитать", Тип("КнопкаФормы"), Группа);
	КнопкаФормы.ИмяКоманды = "ДЗ11Пересчитать";
	КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	// }}
	
КонецПроцедуры

&НаКлиенте
Процедура ДЗ11Пересчитать(Команда)
	// {{Пересчитать с уетом скидки
	ДанныеТаблицыТовары();
	ДанныеТаблицыУслуги();
	// }}
КонецПроцедуры 

&НаКлиенте
Процедура ДанныеТаблицыТовары() 
	// {{Получить данные таблицы Товары	
	Для Каждого ТекущиеДанные Из Объект.Товары Цикл	
		РассчитатьСуммуСтроки(ТекущиеДанные);
	КонецЦикла;	
	// }}
КонецПроцедуры

&НаКлиенте
Процедура ДанныеТаблицыУслуги() 
	// {{Получить данные таблицы Услуги	
	Для Каждого ТекущиеДанные Из Объект.Услуги Цикл	
		РассчитатьСуммуСтроки(ТекущиеДанные);
	КонецЦикла;	
	// }}
КонецПроцедуры 

&НаКлиенте
Процедура ПриИзмененииСкидки(Элемент)
	// {{Оповещение при изменении Скидки
	ТекстВопроса = "Изменен процент скидки. Пересчитать таблицу?";
	ЗадатьВопрос(ТекстВопроса);   
	// }}
КонецПроцедуры      

&НаКлиенте
Процедура ЗадатьВопрос(ТекстВопроса)
	// {{Задать вопрос при изменении Скидки
	Оповещение = Новый ОписаниеОповещения("ПолучитьОтветНаВопрос", ЭтаФорма);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);	
	// }}
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьОтветНаВопрос(Ответ, Параметры) Экспорт
	// {{Полуить ответ на вопрос при изменении Скидки	
	Если Ответ = КодВозвратаДиалога.Да Тогда 
		ДанныеТаблицыТовары();
		ДанныеТаблицыУслуги();
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		Отказ = Истина;
	КонецЕсли;
	// }}
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	// КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	// ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
	// {{Расчет Суммы 
	ЦенаСоСкидкой = ТекущиеДанные.Цена - (ТекущиеДанные.Цена * (Объект.ДЗ11_СогласованнаяСкидка/100)); 	
	ТекущиеДанные.Сумма = ЦенаСоСкидкой * ТекущиеДанные.Количество;
	// }}
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
